#!/bin/bash
planner_directory=~/Documents/school/planner
exec_directory=/home/god/projects/bash/planner
source $exec_directory/subjects

the_date=`date '+%m-%d-%y'`
plan_file=$planner_directory/$the_date

print-rgb(){
  printf "\x1b[38;2;$2;$3;$4m$1\x1b[0m\n"
}

planner_exists(){
  if [ ! -e  "$plan_file" ]; then
    echo "Planner does not exist, create one by running: planner"
    exit
  fi
}

if [ ! -e $exec_directory/subjects ]; then
  echo "Error, \"subjects\" file not found, please create one in this directory"
  echo "It should include the following:"
  echo "  subjects=(<subject_1> <subject_2> <subject_3> ...)"
  exit
fi

planner_edit(){
  if [ "$1" == "" ]; then
    echo "Please specify a subject"
    exit
  else
    if [ "$2" == "" ]; then
      current_entry="";
    else
      current_entry="$2"
    fi
    read -re -i "$current_entry" -p "Homework for $1: " input
    if [ "$input" == "" ]; then
      input="none"
    fi
    sed -i "s~.*$1:.*~$1: $input~g" $plan_file
  fi
}

if [ "$1" == "-h" ]; then
   echo "planner is a simple program to organize your daily homework"
   echo "Here is a list of its commands:"
   echo "  planner              |  Initalize the daily planner or replace it if already made"
   echo "  psearch -l [subject] |  Lists homework for the day or for a specifc subject"
   echo "  psearch -e [subject] |  Edit the entry for a specifc subject"
   echo "  psearch -E [subject] |  Fully change the entry for a specifc subject"
   echo "  psearch -d [subject] |  Mark a subject as done"
   echo "  psearch +d [subject] |  Mark a subject as not done (undo's -d)"
   echo "  psearch -h           |  Brings up this message"

elif [ "$1" == "-l" ]; then
  planner_exists
  if [ "$2" == "" ]; then
    subject=""
  else
    subject="$2:"
  fi
  while IFS= read -r var; do
    if [[ $var == *"$subject"* ]]; then
      if [[ $var == *"done"* ]] || [[ $var == *"none"* ]]; then
  	     print-rgb "$var" 50 255 100
      else
        print-rgb "$var" 255 50 50
      fi
    fi
  done < "$plan_file"

elif [ "$1" == "-e" ]; then
  planner_exists
  current_entry=`cat $plan_file | grep "$2:"  | sed -r 's/.*: //g'`
  planner_edit $2 "$current_entry"

elif [ "$1" == "-E" ]; then
  planner_exists

  planner_edit $2

elif [ "$1" == "-d" ]; then
  planner_exists

  if [ "$2" == "" ]; then
    echo "Please specify a subject"
    exit
  else
    if [[ $(grep "$2:" $plan_file) == *"done ("* ]]; then
      echo "Already done with $2"
      exit
    elif [[ $(grep "$2:" $plan_file) == *"none"* ]]; then
      echo "You don't have $2"
      exit
    else
      read -p "Are you done with homework for $2 (y/n): " choice
      if [ "$choice" == "y" ]; then
        sed -i "s/$2: /$2: done \(/g" $plan_file
        sed -i "/$2:/ s/$/\)/" $plan_file
      else
        exit
      fi
    fi

  fi

elif [ "$1" == "+d" ]; then
  planner_exists

  if [ "$2" == "" ]; then
    echo "Please specify a subject"
    exit
  else
    if [[ $(grep "$2:" $plan_file) == *"none"* ]]; then
      echo "You don't have $2"
      exit
    elif [[ $(grep "$2:" $plan_file) != *"done ("* ]]; then # ||
      echo "You haven't done $2"
      exit
    else
      read -p "Are you not done with homework for $2 (y/n): " choice
      if [ "$choice" == "y" ]; then
        current_entry=`cat $plan_file | grep "$2:"  | sed -r 's/done \(//g'`
        current_entry=`echo $current_entry | sed -r 's/\)$//g'`
        sed -i "s@.*$2:.*@$current_entry@g" $plan_file
        # echo $current_entry
      else
        exit
      fi
    fi
  fi

else

  if [ "$1" == "" ]; then
    if [ -e  $plan_file ]; then
      read -p "Already plannerized, are you sure you want to reset (y/n): " choice
      if [ "$choice" = "y" ]; then
        rm -f $plan_file
        echo "Resetting..."
      else
        exit
      fi
    fi
    touch $plan_file
    for subject in ${subjects[@]}; do
      read -p "Homework for $subject: " input
      if [ "$input" == "" ];then
        input="none"
      fi
      echo "$subject: $input" >> $plan_file
    done
  fi
fi
